install.packages("hyperSpec")
library(hyperSpec)
spectral_results <- read.csv("Final_Para/spectral_results.csv", header = FALSE)
reference <- read.csv("Final_Para/reference.csv", header = FALSE)
wl <- read.csv("Final_Para/wl.csv", header =  FALSE)
spc <- new("hyperSpec", spc = spectral_results[-1,],
wavelength = as.numeric(as.matrix(wl)))
refd <- spc
refd <- spc[[]]
refd - t(reference)
refd - reference
refd1 <- refd - reference
?sweep
refd <- sweep(spc, reference)
refd <- sweep(spc, 2, reference, "-")
refd <- sweep(spc, 2, as.matrix(reference), "-")
plot(refd)
dark_reference <- read.table("C:/Users/darren.whitaker/Dropbox/Work/Python/Cleaning_Rig/Final_Para/dark_reference.csv", quote="\"", comment.char="")
View(dark_reference)
dark_corrected <- sweep(spc, 2, as.matrix(dark_reference), "-")
plot(dark_corrected)
corrected <- sweep(dark_corrected,2,as.matrix(reference, "/")
)
corrected <- sweep(dark_corrected,2,as.matrix(reference), "/")
plot(corrected)
View(refd)
if (!require("pacman")) install.packages("pacman")
pacman::p_load("hyperSpec", "gtools", "RColorBrewer", "pls")
####### This code block will navigate to the directory specified and import all the .txt files there #####
####### project directory is ./ so place txt files in folder ./Data/xxxx and change first line to reflect
####### when returning to root dir "../" moves up one layer, here we moved two layers in Data, and xxxx so "../../" is needed
setwd("./OceanView_Test/")
filelist <- mixedsort(list.files(pattern = "*.txt"))  #List all files in currentwd
buffer <- matrix (scan(filelist [1], skip=14), ncol = 2, byrow = TRUE) #Read first file into buffer, 14 rows are skipped this is the header with acquissiton info
buffer <- matrix (scan(filelist [1], skip=15), ncol = 2, byrow = TRUE) #Read first file into buffer, 14 rows are skipped this is the header with acquissiton info
wavelength <- buffer [,1] #create wavelength vector
spcdata <- matrix (ncol = nrow(buffer), nrow = length(filelist)) #preallocate data matrix
spcdata [1,] <- buffer[,2] #read in first spectrum
for (f in seq(along = filelist)[-1]){
buffer <- matrix (scan(filelist [f], quiet = TRUE, skip = 14), ncol =2, byrow = TRUE)
spcdata[f,] <- buffer [,2]
}
for (f in seq(along = filelist)[-1]){
buffer <- matrix (scan(filelist [f], quiet = TRUE, skip = 15), ncol =2, byrow = TRUE)
spcdata[f,] <- buffer [,2]
}
rm(f,buffer)
cat (length(filelist), "files imported.")
cat (" Wavelength range =", wavelength[1], "-", (wavelength[1]+(length(wavelength)-1)))
setwd("../") #Return to Root Dir
#######This puts the spectra together in a single object##########
spc <- new("hyperSpec", spc = spcdata, wavelength = wavelength)
plot(spc)
bld <- spc - spc.fit.poly.below(spc)
plot(bld)
plot(spc[,,220:300])
bld <- spc[,,220:300] - spc.fit.poly.below(spc[,,220:300])
plot(bld)
#######This puts the spectra together in a single object##########
spc <- new("hyperSpec", spc = spcdata, wavelength = wavelength)
plot(spc[,,220:300])
plot(spc)
bld <- spc[,,220:600] - spc.fit.poly.below(spc[,,220:600])
plot(bld)
msc <- spc
msc[[]] <- msc(msc[[]])
spc.msc <- spc
rm(msc)
?msc
spc.msc[[]] <- msc(spc.msc[[]])
plot(spc.msc)
spc.msc[,,220:600] <- spc
spc.msc <- spc[,,220:400]
spc.msc[[]] <- msc(spc.msc[[]])
plot(spc.msc)
sg.filt = function(m = 5, dorder = 0) {
x = ((1-m)/2):((m-1)/2)
if (dorder == 0) {
filt = 3 * (3*m^2 -7 -20*x^2) / (4*m*(m^2 -4))
}
if (dorder == 1) {
filt = (5*(3*m^4 -18*m^2 +31)*x -28*(3*m^2
-7)*x^3) / (m*(m^2 -1)*(3*m^4 -39*m^2 +108)/15)
}
if (dorder == 2) {
filt = 30 * (12*m^x^2 -m*(m^2 -1)) / ((m^2)*(m^2 -1)*(m^2 -4))
}
return(filt)
}
spc_sg1 <- spc
spc_sg1[[]] <- t(apply(spc.sg1[[]], 1, stats::filter, filter=sg.filt(5,1)))
spc_sg1[[]] <- t(apply(spc_sg1[[]], 1, stats::filter, filter=sg.filt(5,1)))
plot(spc_sg1)
spc_sg1 <- spc
spc_sg1[[]] <- t(apply(spc_sg1[[]], 1, stats::filter, filter=sg.filt(5,2)))
plot(spc_sg1)
plot(spc)
bld <- spc[,,220:600] - spc.fit.poly.below(spc[,,220:600])
plot(bld)
baselines <- spc.fit.poly.below(spc)
plot(baselines)
bld <- spc - baselines
plot(bld)
baselines <- spc.fit.poly.below(bld)
plot(baselines)
bld <- bld - baselines
plot(bld)
baselines <- spc.fit.poly.below(spc)
plot(baselines)
bld <- spc - baselines
plot(bld)
baselines <- spc.fit.poly.below(bld[,,220:400])
plot(baselines)
bld <- bld[,,220:400] - baselines
plot(bld)
write.csv(spcdata, file = "./OceanTestMatrix.csv")
plot(spc)
plot(spc, spc.nmax=100)
plot(bld, spc.nmax = 200)
baselines <- spc.fit.poly.below(spc)
plot(baselines)
bld <- spc - baselines
plot(bld, spc.nmax = 200)
?plotc
plotc(bld[,,249])
t = 1:67
plotc(bld[,,249], spc ~ t)
filelist
t = 67:1
plotc(bld[,,249], spc ~ t)
plot(spc, spc.nmax= 200)
baselines <- spc.fit.poly.below(spc)
bld <- spc - baselines
plot(bld, spc.nmax = 200)
plotc(bld[,,249], spc ~ t)
plotc(bld[,,247], spc ~ t)
plot(spc$t, bld[,,247])
bld[,,247]
bld[[,,247]]
plot(spc$t, bld[[,,247]])
plot(t, bld[[,,247]])
plot(t, bld[[,,247]], xlab = "Time", ylab = "expression (I ["247 nm"] / a.u.)")
plot(t, bld[[,,247]], xlab = "Time", ylab = expression (I ["247 nm"] / a.u.))
lines(t, bld[[,,247]])
plot(t, bld[[,,247]], xlab = "Time",
ylab = expression (I ["247 nm"] / a.u.), pch = 2)
lines(t, bld[[,,247]])
plot(t, bld[[,,247]], xlab = "Time",
ylab = expression (I ["247 nm"] / a.u.), pch = 3)
plot(t, bld[[,,247]], xlab = "Time",
ylab = expression (I ["247 nm"] / a.u.), pch = 4)
lines(t, bld[[,,247]], col = 3)
plot(spc, spc.nmax= 200)
plot(bld, spc.nmax = 200)
plot(t, bld[[,,247]], xlab = "Time",
ylab = expression (I ["247 nm"] / a.u.), pch = 4)
lines(t, bld[[,,247]], col = 3)
source('~/.active-rstudio-document')
list.dirs()
list.dirs("./data")
spectral_results <- read.csv("Data/ParExp1VacuumFeb22/spectral_results.csv", header = FALSE)
reference <- read.csv("Data/ParExp1VacuumFeb22/reference.csv", header = FALSE)
wl <- read.csv("Data/ParExp1VacuumFeb22/wl.csv", header =  FALSE)
spc <- new("hyperSpec", spc = spectral_results[-1,],
wavelength = as.numeric(as.matrix(wl)))
corrected <- sweep(dark_corrected,2,as.matrix(reference), "/")
corrected <- sweep(spc,2,as.matrix(reference), "/")
plot(corrected)
corrected_bl <- spc - spc.fit.poly.below(spc)
plot(corrected_bl)
smooth <- spc.smooth.spline(corrected_bl)
plot(smooth)
dark_reference <- read.csv("Data/ParExp1VacuumFeb22/dark_reference.csv", header = FALSE)
dark_corrected <- sweep(spc, 2, as.matrix(dark_reference), "-")
plot(spc)
plot(dark_corrected)
corrected <- sweep(dark_corrected,2,as.matrix(reference), "/")
plot(corrected)
smoothed <- spc.smooth.spline(corrected)
plot(smoothed)
plot(spc)
plot(smoothed)
####### This code block will navigate to the directory specified and import all the .txt files there #####
####### project directory is ./ so place txt files in folder ./Data/xxxx and change first line to reflect
####### when returning to root dir "../" moves up one layer, here we moved two layers in Data, and xxxx so "../../" is needed
setwd("./OceanView_Test/")
filelist <- mixedsort(list.files(pattern = "*.txt"))  #List all files in currentwd
buffer <- matrix (scan(filelist [1], skip=15), ncol = 2, byrow = TRUE) #Read first file into buffer, 14 rows are skipped this is the header with acquissiton info
wavelength <- buffer [,1] #create wavelength vector
spcdata <- matrix (ncol = nrow(buffer), nrow = length(filelist)) #preallocate data matrix
spcdata [1,] <- buffer[,2] #read in first spectrum
for (f in seq(along = filelist)[-1]){
buffer <- matrix (scan(filelist [f], quiet = TRUE, skip = 15), ncol =2, byrow = TRUE)
spcdata[f,] <- buffer [,2]
}
####### This code block will navigate to the directory specified and import all the .txt files there #####
####### project directory is ./ so place txt files in folder ./Data/xxxx and change first line to reflect
####### when returning to root dir "../" moves up one layer, here we moved two layers in Data, and xxxx so "../../" is needed
setwd("./old/OceanView_Test/")
filelist <- mixedsort(list.files(pattern = "*.txt"))  #List all files in currentwd
buffer <- matrix (scan(filelist [1], skip=15), ncol = 2, byrow = TRUE) #Read first file into buffer, 14 rows are skipped this is the header with acquissiton info
wavelength <- buffer [,1] #create wavelength vector
if (!require("pacman")) install.packages("pacman")
pacman::p_load("hyperSpec", "gtools", "RColorBrewer", "pls")
filelist <- mixedsort(list.files(pattern = "*.txt"))  #List all files in currentwd
buffer <- matrix (scan(filelist [1], skip=15), ncol = 2, byrow = TRUE) #Read first file into buffer, 14 rows are skipped this is the header with acquissiton info
wavelength <- buffer [,1] #create wavelength vector
spcdata <- matrix (ncol = nrow(buffer), nrow = length(filelist)) #preallocate data matrix
spcdata [1,] <- buffer[,2] #read in first spectrum
for (f in seq(along = filelist)[-1]){
buffer <- matrix (scan(filelist [f], quiet = TRUE, skip = 15), ncol =2, byrow = TRUE)
spcdata[f,] <- buffer [,2]
}
rm(f,buffer)
cat (length(filelist), "files imported.")
cat (" Wavelength range =", wavelength[1], "-", (wavelength[1]+(length(wavelength)-1)))
setwd("../../") #Return to Root Dir
#######This puts the spectra together in a single object##########
spc <- new("hyperSpec", spc = spcdata, wavelength = wavelength)
plot(spc, spc.nmax= 200)
plot(corrected)
plot(smoothed)
plot(1:39, smoothed[[,,249]])
plot(1:39, smoothed[[,,350]])
lines(1:39, smoothed[[,,350]])
list.dirs("./data")
exps <- list.dirs("./data")
spectral_results <- read.csv(exps[2]+"/spectral_results.csv", header = FALSE)
exps[2]+"/spectral_results.csv"
exps[2]
paste(exps[2], "/spectral_results.csv")
spectral_results <- read.csv(paste(exps[2]+"/spectral_results.csv"), header = FALSE)
spectral_results <- read.csv(paste(exps[2],"/spectral_results.csv"), header = FALSE)
?paste
spectral_results <- read.csv(paste(exps[2],"/spectral_results.csv", sep=""), header = FALSE)
i = 2
library(hyperSpec)
exps <- list.dirs("./data")
i = 2
spectral_results <- read.csv(paste(exps[i],"/spectral_results.csv", sep=""), header = FALSE)
reference <- read.csv(paste(exps[i],"/reference.csv", sep=""), header = FALSE)
dark_reference <- read.csv(paste(exps[i],"/dark_reference.csv", sep=""), header = FALSE)
wl <- read.csv(paste(exps[i],"/wl.csv", sep=""), header = FALSE)
spc <- new("hyperSpec", spc = spectral_results[-1,],
wavelength = as.numeric(as.matrix(wl)))
plot(spc)
dark_corrected <- sweep(spc, 2, as.matrix(dark_reference), "-")
plot(dark_corrected)
corrected <- sweep(dark_corrected,2,as.matrix(reference), "/")
plot(corrected)
smoothed <- spc.smooth.spline(corrected)
plot(smoothed)
plot(1:39, smoothed[[,,350]])
lines(1:39, smoothed[[,,350]])
exps <- list.dirs("./data")
i = 3
spectral_results <- read.csv(paste(exps[i],"/spectral_results.csv", sep=""), header = FALSE)
reference <- read.csv(paste(exps[i],"/reference.csv", sep=""), header = FALSE)
dark_reference <- read.csv(paste(exps[i],"/dark_reference.csv", sep=""), header = FALSE)
wl <- read.csv(paste(exps[i],"/wl.csv", sep=""), header = FALSE)
spc <- new("hyperSpec", spc = spectral_results[-1,],
wavelength = as.numeric(as.matrix(wl)))
plot(spc)
dark_corrected <- sweep(spc, 2, as.matrix(dark_reference), "-")
plot(dark_corrected)
corrected <- sweep(dark_corrected,2,as.matrix(reference), "/")
plot(corrected)
smoothed <- spc.smooth.spline(corrected)
plot(smoothed)
plot(1:39, smoothed[[,,350]])
lines(1:39, smoothed[[,,350]])
exps <- list.dirs("./data")
i = 4
spectral_results <- read.csv(paste(exps[i],"/spectral_results.csv", sep=""), header = FALSE)
reference <- read.csv(paste(exps[i],"/reference.csv", sep=""), header = FALSE)
dark_reference <- read.csv(paste(exps[i],"/dark_reference.csv", sep=""), header = FALSE)
wl <- read.csv(paste(exps[i],"/wl.csv", sep=""), header = FALSE)
spc <- new("hyperSpec", spc = spectral_results[-1,],
wavelength = as.numeric(as.matrix(wl)))
plot(spc)
dark_corrected <- sweep(spc, 2, as.matrix(dark_reference), "-")
plot(dark_corrected)
corrected <- sweep(dark_corrected,2,as.matrix(reference), "/")
plot(corrected)
smoothed <- spc.smooth.spline(corrected)
plot(smoothed)
plot(1:39, smoothed[[,,350]])
lines(1:39, smoothed[[,,350]])
exps <- list.dirs("./data")
i = 5
spectral_results <- read.csv(paste(exps[i],"/spectral_results.csv", sep=""), header = FALSE)
reference <- read.csv(paste(exps[i],"/reference.csv", sep=""), header = FALSE)
dark_reference <- read.csv(paste(exps[i],"/dark_reference.csv", sep=""), header = FALSE)
wl <- read.csv(paste(exps[i],"/wl.csv", sep=""), header = FALSE)
spc <- new("hyperSpec", spc = spectral_results[-1,],
wavelength = as.numeric(as.matrix(wl)))
plot(spc)
dark_corrected <- sweep(spc, 2, as.matrix(dark_reference), "-")
plot(dark_corrected)
corrected <- sweep(dark_corrected,2,as.matrix(reference), "/")
plot(corrected)
smoothed <- spc.smooth.spline(corrected)
plot(smoothed)
plot(1:39, smoothed[[,,350]])
lines(1:39, smoothed[[,,350]])
source('~/.active-rstudio-document')
